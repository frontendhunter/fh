{"version":3,"sources":["common/FormsControls.js","common/FormsControls.module.css","utils/validators/validators.js","components/Dialogs/Dialogs.module.css","components/Dialogs/DialogItem/DialogsItem.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx"],"names":["FormControl","input","meta","touched","error","Formtype","props","hasError","className","s","formControl","Textarea","Input","module","exports","required","value","maxLengthCreator","maxLength","length","DialogItem","to","id","dialog__item","activeClassName","active","name","src","img","Message","messages__item","message","maxLength50","MessageReduxForm","reduxForm","form","onSubmit","handleSubmit","Field","validate","component","placeholder","Dialogs","dialogsElements","dialogsPage","dialogs","map","d","messagesElements","messages","m","class","dialogs__wrap","values","addMessage","newMessageBody","compose","connect","state","newMessageText","dispatch","addMessageActionCreator","WithAuthRedirect"],"mappings":"8PAGMA,EAAc,SAAC,GAAuD,IAAtDC,EAAqD,EAArDA,MAAqD,IAA/CC,KAAOC,EAAwC,EAAxCA,QAASC,EAA+B,EAA/BA,MAAOC,EAAwB,EAAxBA,SAAaC,EAAW,iBACjEC,EAAWJ,GAAWC,EAC5B,OACI,sBAAKI,UAAWC,IAAEC,YAAc,KAAOH,EAAWE,IAAEL,MAAO,IAA3D,UACI,8BACI,cAACC,EAAD,2BAAcJ,GAAWK,MAE7B,8BACKC,GAAY,+BAAOH,UAQvBO,EAAW,SAACL,GACrB,OAAO,cAACN,EAAD,2BAAiBM,GAAjB,IAAwBD,SAAS,eAI/BO,EAAQ,SAACN,GAClB,OAAO,cAACN,EAAD,2BAAiBM,GAAjB,IAAwBD,SAAS,a,oBCxB5CQ,EAAOC,QAAU,CAAC,UAAY,iCAAiC,YAAc,mCAAmC,sBAAwB,6CAA6C,YAAc,mCAAmC,MAAQ,6BAA6B,iBAAmB,wCAAwC,WAAa,kCAAkC,eAAiB,wC,iCCDtY,oEAAO,IAAMC,EAAW,SAAAC,GACpB,IAAIA,EACJ,OAAKA,OAAL,EAAmB,qBAGVC,EAAkB,SAACC,GAAD,OAAe,SAACF,GAC3C,GAAIA,GAASA,EAAMG,OAASD,EAAW,MAAM,8BAAN,OAAqCA,M,oBCLhFL,EAAOC,QAAU,CAAC,cAAgB,+BAA+B,aAAe,8BAA8B,OAAS,wBAAwB,eAAiB,kC,0FCYjJM,EARE,SAACd,GACd,OACI,8BACI,eAAC,IAAD,CAASe,GAAI,YAAcf,EAAMgB,GAAId,UAAWC,IAAEc,aACzCC,gBAAiBf,IAAEgB,OAD5B,UACqCnB,EAAMoB,KAAK,qBAAKC,IAAKrB,EAAMsB,YCY7DC,EAjBD,SAACvB,GAIX,OACI,8BAEI,sBAAKE,UAAWC,IAAEqB,eAAlB,UACI,4BAAG,4BAAIxB,EAAMoB,SACb,qBAAKC,IAAKrB,EAAMsB,MAFpB,KAE6BtB,EAAMyB,c,oCCwBzCC,EAAcf,YAAiB,IAa/BgB,EAAmBC,YAAU,CAC/BC,KAAK,WADgBD,EAXL,SAAC5B,GACjB,OAAO,uBAAM8B,SAAU9B,EAAM+B,aAAtB,UACH,cAACC,EAAA,EAAD,CAAOC,SAAU,CAACxB,IAASiB,GAAcQ,UAAW7B,IAAWe,KAAM,iBAAkBe,YAAa,uBACpG,8BACI,yDAYGC,EA/CC,SAACpC,GAEb,IAAIqC,EAAkBrC,EAAMsC,YAAYC,QAAQC,KAAI,SAAAC,GAAC,OAAI,cAAC,EAAD,CAAuBzB,GAAIyB,EAAEzB,GAAII,KAAMqB,EAAErB,KAC7BE,IAAKmB,EAAEnB,KADFmB,EAAEzB,OAGxE0B,EAAmB1C,EAAMsC,YAAYK,SAASH,KAAI,SAAAI,GAAC,OAAI,cAAC,EAAD,CAAoBC,MAAOD,EAAEC,MAAOpB,QAASmB,EAAEnB,QACtCL,KAAMwB,EAAExB,KACRE,IAAKsB,EAAEtB,KAFFsB,EAAE5B,OAU3E,OACI,sBAAKd,UAAWC,IAAE2C,cAAlB,UACI,qBAAK5C,UAAWC,IAAEoC,QAAlB,SACKF,IAEL,sBAAKnC,UAAWC,IAAEwC,SAAlB,UACKD,EACD,cAACf,EAAD,CAAkBG,SAZV,SAACiB,GACjB/C,EAAMgD,WAAWD,EAAOE,0B,wBCOjBC,sBACXC,aAjBkB,SAACC,GACnB,MAAO,CACHd,YAAac,EAAMd,YACnBe,eAAgBD,EAAMd,YAAYe,mBAGjB,SAACC,GACtB,MAAO,CAEHN,WAAY,SAACC,GACTK,EAASC,YAAwBN,SAQzCO,IAFWN,CAGbd","file":"static/js/5.3a5e0414.chunk.js","sourcesContent":["import React from \"react\";\r\nimport s from './FormsControls.module.css'\r\n\r\nconst FormControl = ({input,meta: {touched, error},Formtype, ...props}) => {\r\n    const hasError = touched && error;\r\n    return (\r\n        <div className={s.formControl + \" \" + (hasError ? s.error: \"\")}>\r\n            <div>\r\n                <Formtype {...input} {...props} />\r\n            </div>\r\n            <div>\r\n                {hasError && <span>{error}</span> }\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\n\r\nexport const Textarea = (props) => {\r\n    return <FormControl {...props} Formtype=\"textarea\"></FormControl>\r\n}\r\n\r\n\r\nexport const Input = (props) => {\r\n    return <FormControl {...props} Formtype=\"input\"></FormControl>\r\n}\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainTitle\":\"FormsControls_mainTitle__3OpOl\",\"formWrapper\":\"FormsControls_formWrapper__2DbfW\",\"rememberMe__container\":\"FormsControls_rememberMe__container__2VP2U\",\"formControl\":\"FormsControls_formControl__1qQTS\",\"error\":\"FormsControls_error__pqwJL\",\"formSummaryError\":\"FormsControls_formSummaryError__3oqae\",\"imageBlock\":\"FormsControls_imageBlock__1RcLn\",\"allFormWrapper\":\"FormsControls_allFormWrapper__2PcSP\"};","export const required = value => {\r\n    if (value) return undefined;\r\n    if (!value) return 'Field is required';\r\n\r\n}\r\nexport const maxLengthCreator =(maxLength) => (value) => {\r\n    if (value && value.length > maxLength) return `Overflow Field max length: ${maxLength}`;\r\n    return undefined\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs__wrap\":\"Dialogs_dialogs__wrap__2ZZar\",\"dialog__item\":\"Dialogs_dialog__item__1lTE1\",\"active\":\"Dialogs_active__Mlupo\",\"messages__item\":\"Dialogs_messages__item__3ZPA6\"};","import React from \"react\"\r\nimport s from './../Dialogs.module.css'\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\n\r\nlet DialogItem = (props) => {\r\n    return (\r\n        <div>\r\n            <NavLink to={\"/dialogs/\" + props.id} className={s.dialog__item}\r\n                     activeClassName={s.active}>{props.name}<img src={props.img}/></NavLink>\r\n        </div>\r\n    )\r\n}\r\nexport default DialogItem","import React from \"react\"\r\nimport s from './../Dialogs.module.css'\r\n\r\n\r\nlet Message = (props) => {\r\n\r\n\r\n\r\n    return(\r\n        <div >\r\n\r\n            <div className={s.messages__item}>\r\n                <p><b>{props.name}</b></p>\r\n                <img src={props.img}/>  {props.message}\r\n            </div>\r\n\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default Message","import React from \"react\"\r\nimport s from './Dialogs.module.css'\r\nimport DialogItem from \"./DialogItem/DialogsItem\";\r\nimport Message from \"./Message/Message\";\r\nimport {Field, reduxForm, values} from \"redux-form\";\r\nimport {Textarea} from \"../../common/FormsControls\";\r\nimport {maxLengthCreator, required} from \"../../utils/validators/validators\";\r\n\r\nconst Dialogs = (props) => {\r\n\r\n    let dialogsElements = props.dialogsPage.dialogs.map(d => <DialogItem key={d.id} id={d.id} name={d.name}\r\n                                                                         img={d.img}/>)\r\n\r\n    let messagesElements = props.dialogsPage.messages.map(m => <Message key={m.id} class={m.class} message={m.message}\r\n                                                                        name={m.name}\r\n                                                                        img={m.img}/>)\r\n\r\n\r\n    let addNewMessage = (values) => {\r\n        props.addMessage(values.newMessageBody)\r\n    }\r\n\r\n\r\n    return (\r\n        <div className={s.dialogs__wrap}>\r\n            <div className={s.dialogs}>\r\n                {dialogsElements}\r\n            </div>\r\n            <div className={s.messages}>\r\n                {messagesElements}\r\n                <MessageReduxForm onSubmit={addNewMessage}/>\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nconst maxLength50 = maxLengthCreator(50);\r\n\r\nconst MessageForm = (props) => {\r\n    return <form onSubmit={props.handleSubmit}>\r\n        <Field validate={[required,maxLength50]} component={Textarea}  name={'newMessageBody'} placeholder={'Enter your message'}></Field>\r\n        <div>\r\n            <button>add message</button>\r\n        </div>\r\n    </form>\r\n}\r\n\r\n\r\n\r\nconst MessageReduxForm = reduxForm({\r\n    form:'Message',\r\n})(MessageForm)\r\n\r\n\r\nexport default Dialogs","import React from \"react\"\r\n\r\nimport {addMessageActionCreator} from \"../../redux/dialogs-reducer\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport {WithAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        dialogsPage: state.dialogsPage,\r\n        newMessageText: state.dialogsPage.newMessageText,\r\n    }\r\n};\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n\r\n        addMessage: (newMessageBody) => {\r\n            dispatch(addMessageActionCreator(newMessageBody))\r\n        }\r\n\r\n    }\r\n};\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    WithAuthRedirect\r\n)(Dialogs);"],"sourceRoot":""}