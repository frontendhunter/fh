{"version":3,"sources":[" api/api.js","components/Users/Users.module.css","components/Sidebar/Sidebar.module.css","redux/users-reducer.ts","common/Paginator.tsx","components/Users/User.tsx","components/Users/Users.tsx","redux/users-selectors.ts","components/Users/UsersContainer.tsx","components/Header/Header.jsx","components/Header/HeaderContainer.jsx","redux/app-reducer.ts","redux/sidebar-reducer.ts","redux/redux-store.ts","hoc/withSuspense.js","App.js","index.js","common/Paginator.module.css","common/Preloader.jsx","redux/auth-reducer.ts","common/Preloader.module.css","redux/profile-reducer.ts","components/Header/Header.module.css","hoc/withAuthRedirect.js","assets/images/defaultProfileImage.png","redux/dialogs-reducer.ts"],"names":["instance","axios","withCredentials","baseURL","headers","usersAPI","getUsers","currentPage","pageSize","get","then","response","data","follow","userId","post","unfollow","delete","getProfile","console","warn","profileAPI","getStatus","updateStatus","status","put","savePhoto","photoFile","formData","FormData","append","saveProfile","profile","authAPI","checkAuth","login","email","password","rememberMe","captcha","logout","securityAPI","getCaptchaUrl","module","exports","UNFOLLOW","FOLLOW","SET_USERS","SET_CURRENT_PAGE","SET_TOTAL_USERS_COUNT","TOGGLE_IS_FETCHING","TOGGLE_FOLLOWING_PROGRESS","initialState","users","totalUsersCount","isFetching","followingInProgress","unfollowSucces","type","followSucces","setCurrentPage","page","toggleIsFetching","toggleFollowingProgress","followUnfollowFlow","dispatch","apiMethod","actionCreator","a","resultCode","usersReducer","state","action","map","u","id","followed","totalCount","filter","Paginator","props","pagesCount","Math","ceil","pages","i","push","portionCount","useState","portionNumber","setPortionNumber","leftPortionNumber","rightPortionNumber","className","s","onClick","paginatorIcon","icon","faAngleDoubleLeft","faAngleLeft","p","cn","pageNumber","e","onPageChanged","faAngleRight","faAngleDoubleRight","User","text","user","userContainer","image_wrap","to","photos","large","userIcon","faUserTie","src","discription","name","length","slice","disabled","some","mode_Green","Users","all","createSelector","usersPage","getPageSize","getTotalUsersCount","getCurrentPage","getIsFetching","getFollowingInProgress","UsersContainer","this","Preloader","React","Component","compose","connect","bind","items","WithAuthRedirect","Header","isAuth","header","wrapper","helper_wrapper","left","logo__txt","activeClassName","active","nav","item","profileInfo","small","defPhoto","linkWrap","nickname","loginButton","hiden","HeaderContainer","authorizedUserId","getHeaderProfile","refreshProfile","profilePage","headerProfile","auth","INITIALIZED_SUCCESS","initialized","appReducer","friends","img","sidebarReducer","rootReducer","combineReducers","app","profileReducer","dialogsPage","dialogsReducer","sideBar","authReducer","form","formReducer","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store","createStore","applyMiddleware","thunkMiddleware","__store__","WithSuspense","fallback","DialogsContainer","lazy","ProfileContainer","Login","App","initializeApp","path","render","exact","AppContainer","withRouter","SamuraiJSApp","ReactDOM","document","getElementById","loader","l_main","l_square","SET_USER_DATA","GET_CAPTCHA_URL_SUCCESS","captchaUrl","setAuthUserData","payload","getCaptchaUrlSuccess","errMessage","messages","stopSubmit","_error","url","ADD_POST","DELETE_POST","SET_USER_PROFILE","SET_HEADER_PROFILE","SET_USER_STATUS","SAVE_PHOTO_SUCCESS","posts","message","likesCount","addPostActionCreator","newPostText","setUserStatusAC","getUserStatus","updateUserStatus","file","getState","Promise","reject","postId","mapStateToPropsForRedirect","RedirectComponent","ADD_MESSAGE","dialogs","addMessageActionCreator","newMessageBody"],"mappings":"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","file":"static/js/main.c92f55d3.chunk.js","sourcesContent":["import * as axios from \"axios\";\r\n\r\n\r\nconst instance = axios.create({\r\n    withCredentials: true,\r\n    baseURL: \"https://social-network.samuraijs.com/api/1.0/\",\r\n    headers: {\"API-KEY\": \"2cc3354f-01b5-4bfb-aa39-e518c7551d43\"}\r\n});\r\n\r\nexport const usersAPI = {\r\n    getUsers(currentPage = 1, pageSize = 10) {\r\n        return instance.get(`users?page=${currentPage}&count=${pageSize}`)\r\n            .then(response => {\r\n                return response.data\r\n            });\r\n    },\r\n    follow(userId) {\r\n        return instance.post(`follow/${userId}`)\r\n    },\r\n    unfollow(userId) {\r\n        return instance.delete(`follow/${userId}`)\r\n    },\r\n\r\n    getProfile(userId) {\r\n        console.warn(\"Obsolete method. Please use profileAPI obj\")\r\n        return profileAPI.getProfile(userId)\r\n    }\r\n}\r\nexport const profileAPI = {\r\n\r\n    getProfile(userId) {\r\n        return instance.get(`profile/${userId}`)\r\n    },\r\n    getStatus(userId) {\r\n        return instance.get(`profile/status/${userId}`)\r\n    },\r\n    updateStatus(status) {\r\n        return instance.put('profile/status/', {status: status})\r\n    },\r\n    savePhoto(photoFile) {\r\n        let formData = new FormData()\r\n        formData.append('image',photoFile)\r\n        return instance.put('profile/photo/', formData,{\r\n            headers: {\r\n                'Content-Type':' multipart/form-data'\r\n            }\r\n        })\r\n    },\r\n    saveProfile(profile){\r\n        return instance.put('profile/', profile)\r\n    }\r\n}\r\n\r\nexport const authAPI = {\r\n    checkAuth() {\r\n        return instance.get(`auth/me`)\r\n    },\r\n    login({email, password, rememberMe = false,captcha=null}) {\r\n        return instance.post(`auth/login`, {email, password, rememberMe,captcha})\r\n    },\r\n    logout() {\r\n        return instance.delete(`auth/login`);\r\n    },\r\n}\r\n\r\nexport const  securityAPI = {\r\n    getCaptchaUrl() {\r\n        return instance.get(`security/get-captcha-url`)\r\n    },\r\n}\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"all\":\"Users_all__2rk21\",\"userIcon\":\"Users_userIcon__1-YJ8\",\"users\":\"Users_users__EkhOa\",\"userContainer\":\"Users_userContainer__EgYaH\",\"image_wrap\":\"Users_image_wrap__3o7jT\",\"name\":\"Users_name__21Uq3\",\"discription\":\"Users_discription__17jd7\",\"mode_Green\":\"Users_mode_Green__3MOC4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"sideBar\":\"Sidebar_sideBar__1zMOG\",\"nav\":\"Sidebar_nav__3T_N7\",\"item\":\"Sidebar_item__2Yu7K\",\"active\":\"Sidebar_active__vGbym\",\"friends\":\"Sidebar_friends__1sjXs\",\"friend\":\"Sidebar_friend__2NEtj\"};","import {usersAPI} from \"../ api/api\";\r\nimport {UserType} from \"../types/types\";\r\n\r\nconst UNFOLLOW = 'UNFOLLOW';\r\nconst FOLLOW = 'FOLLOW';\r\nconst SET_USERS = 'SET_USERS';\r\nconst SET_CURRENT_PAGE = 'CURRENT_PAGE';\r\nconst SET_TOTAL_USERS_COUNT = 'SET_TOTAL_USERS_COUNT';\r\nconst TOGGLE_IS_FETCHING = 'TOGGLE_IS_FETCHING';\r\nconst TOGGLE_FOLLOWING_PROGRESS = 'TOGGLE_FOLLOWING_PROGRESS'\r\n\r\n\r\nlet initialState = {\r\n    users: [] as Array<UserType>,\r\n    pageSize: 20,\r\n    totalUsersCount: 0,\r\n    currentPage: 1,\r\n    isFetching: false,\r\n    followingInProgress: [] as Array<number>,  //Array of users id\r\n};\r\ntype InitialState  = typeof initialState;\r\n\r\nconst usersReducer = (state = initialState, action:any):InitialState => {\r\n    switch (action.type) {\r\n        case FOLLOW:\r\n            return {\r\n                ...state, users: state.users.map((u) => {\r\n                    if (u.id === action.userId) {\r\n                        return {...u, followed: true}\r\n\r\n                    }\r\n                    return u;\r\n                })\r\n            };\r\n        case UNFOLLOW:\r\n            return {\r\n                ...state, users: state.users.map((u) => {\r\n                    if (u.id === action.userId) {\r\n                        return {...u, followed: false}\r\n\r\n                    }\r\n                    return u;\r\n                })\r\n            };\r\n        case SET_USERS:\r\n            return {...state, users: action.users};\r\n        case SET_CURRENT_PAGE:\r\n            return {...state, currentPage: action.page};\r\n        case SET_TOTAL_USERS_COUNT:\r\n            return {...state, totalUsersCount: action.totalCount};\r\n        case TOGGLE_IS_FETCHING:\r\n            return {...state, isFetching: action.isFetching};\r\n        case TOGGLE_FOLLOWING_PROGRESS:\r\n            return {\r\n                ...state,\r\n                followingInProgress: action.isFetching\r\n                    ? [...state.followingInProgress, action.userId]\r\n                    : state.followingInProgress.filter(id => id != action.userId)\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\ntype UnfollowSuccesType={type: typeof UNFOLLOW, userId:number}\r\nexport const unfollowSucces = (userId:number):UnfollowSuccesType => ({type: UNFOLLOW, userId});\r\ntype FollowSuccesType ={type: typeof FOLLOW, userId:number}\r\nexport const followSucces = (userId:number):FollowSuccesType => ({type: FOLLOW, userId});\r\ntype SetUsersType={type: typeof SET_USERS, users:Array<UserType>}\r\nexport const setUsers = (users:Array<UserType>):SetUsersType => ({type: SET_USERS, users});\r\ntype SetCurrentPageType = {type: typeof SET_CURRENT_PAGE, page:number}\r\nexport const setCurrentPage = (page:number):SetCurrentPageType => ({type: SET_CURRENT_PAGE, page});\r\ntype SetTotalUsersCountType = {type: typeof SET_TOTAL_USERS_COUNT, totalCount:number}\r\nexport const setTotalUsersCount = (totalCount:number):SetTotalUsersCountType => ({type: SET_TOTAL_USERS_COUNT, totalCount});\r\ntype ToggleIsFetchingType ={type: typeof TOGGLE_IS_FETCHING, isFetching:boolean};\r\nexport const toggleIsFetching = (isFetching:boolean):ToggleIsFetchingType => ({type: TOGGLE_IS_FETCHING, isFetching});\r\ntype ToggleFollowingProgressType = {type: typeof TOGGLE_FOLLOWING_PROGRESS, isFetching:boolean, userId:number}\r\nexport const toggleFollowingProgress = (isFetching:boolean, userId:number):ToggleFollowingProgressType => ({type: TOGGLE_FOLLOWING_PROGRESS, isFetching, userId});\r\n\r\nexport const requestUsers = (page:number, pageSize:number) => async (dispatch:any) => {\r\n    dispatch(toggleIsFetching(true));\r\n    dispatch(setCurrentPage(page));\r\n    let data = await usersAPI.getUsers(page, pageSize);\r\n    dispatch(toggleIsFetching(false));\r\n    dispatch(setUsers(data.items));\r\n    dispatch(setTotalUsersCount(data.totalCount));\r\n\r\n\r\n}\r\n\r\nconst followUnfollowFlow = async (dispatch:any, userId:number, apiMethod:any, actionCreator:any) => {\r\n    dispatch(toggleFollowingProgress(true, userId))\r\n    let response = await apiMethod(userId);\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(actionCreator(userId));\r\n        dispatch(toggleFollowingProgress(false, userId))\r\n    }\r\n}\r\n    export const follow = (userId:number) => async (dispatch:any) => {\r\n        followUnfollowFlow(dispatch, userId,  usersAPI.follow.bind(usersAPI), followSucces)\r\n\r\n    }\r\n    export const unfollow = (userId:number) => async (dispatch:any) => {\r\n        followUnfollowFlow(dispatch, userId, usersAPI.unfollow.bind(usersAPI), unfollowSucces)\r\n    }\r\n    export default usersReducer;","import React, {useState} from \"react\";\r\nimport s from './Paginator.module.css';\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport { faAngleRight, faAngleLeft, faAngleDoubleLeft, faAngleDoubleRight} from '@fortawesome/free-solid-svg-icons';\r\nimport cn from \"classnames\";\r\n\r\n\r\ntype Props ={\r\n    totalUsersCount:number,\r\n    pageSize:number,\r\n    onPageChanged:(pageNumber:number)=>void,\r\n    currentPage: number,\r\n}\r\n\r\nconst Paginator:React.FC<Props> = (props ) => {\r\n\r\n    let portionSize = 10;\r\n\r\n    let pagesCount = Math.ceil(props.totalUsersCount /  props.pageSize);\r\n    let pages:Array<number> = [];\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i)\r\n    }\r\n\r\n    let portionCount = Math.ceil(pagesCount / portionSize);\r\n    let  [portionNumber, setPortionNumber ] = useState(1);\r\n    let leftPortionNumber = (portionNumber - 1) * portionSize;\r\n    let rightPortionNumber = portionNumber * portionSize;\r\n\r\n    return <div className={s.pages}>\r\n        {portionNumber > 1 &&\r\n        <button onClick={() => {\r\n            setPortionNumber( 1)\r\n        }}><FontAwesomeIcon className={s.paginatorIcon} icon={faAngleDoubleLeft}/></button>\r\n        }\r\n{portionNumber > 1 &&\r\n        <button onClick={() => {\r\n            setPortionNumber(portionNumber - 1)\r\n        }}><FontAwesomeIcon className={s.paginatorIcon}  icon={faAngleLeft}/></button>\r\n        }\r\n\r\n        {pages\r\n            .filter(p => p >= leftPortionNumber && p <= rightPortionNumber)\r\n            .map(p => {\r\n                return<span className={cn({\r\n                        [s.currentPage]: props.currentPage === p\r\n                    }, s.pageNumber)}\r\n                             key={p}\r\n                             onClick={(e) => {\r\n                                 props.onPageChanged(p)\r\n                             }\r\n                             }\r\n                >{p}</span>\r\n\r\n\r\n            })\r\n        }\r\n\r\n        {portionCount > portionNumber &&\r\n        <button onClick={(() => {\r\n            setPortionNumber(portionNumber + 1)\r\n            // < i\r\n            // // className = \"fas fa-angle-right\" > < /i>\r\n        })}><FontAwesomeIcon className={s.paginatorIcon}  icon={faAngleRight}/></button>\r\n        }\r\n        {portionCount > portionNumber &&\r\n        <button onClick={(() => {\r\n            setPortionNumber(portionCount)\r\n        })}><FontAwesomeIcon className={s.paginatorIcon}  icon={faAngleDoubleRight}/></button>\r\n        }\r\n\r\n\r\n    </div>\r\n}\r\n\r\nexport default Paginator;","import React from \"react\";\r\nimport s from './Users.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport {faUserTie} from '@fortawesome/free-solid-svg-icons';\r\nimport {UserType} from \"../../types/types\";\r\n\r\ntype PropsType = {\r\n    user:UserType,\r\n    followingInProgress: Array<number>,\r\n    follow:(userId:number)=>void,\r\n    unfollow:(userId:number)=>void,\r\n\r\n}\r\n\r\nconst User:React.FC<PropsType> = ({user, followingInProgress, follow, unfollow}) => {\r\n\r\n    const checkLength = (text:string) => {\r\n        if (!text) {\r\n            return 'Статус'\r\n        } else if (text.length < 61) {\r\n            return text\r\n        } else {\r\n            let textSm = text.slice(0, 60) + '...'\r\n            return textSm\r\n\r\n        }\r\n    }\r\n\r\n    return <div className={s.userContainer}>\r\n        <div className={s.image_wrap}>\r\n            <NavLink to={`/Profile/${user.id}`}>\r\n                {user.photos.large === null ? <FontAwesomeIcon className={s.userIcon} icon={faUserTie}/> :\r\n                    <img src={user.photos.large}/>}\r\n\r\n\r\n            </NavLink>\r\n\r\n        </div>\r\n        <div className={s.discription}>\r\n            <NavLink to={`/Profile/${user.id}`} className={s.name}>{user.name} </NavLink>\r\n            <span>{checkLength(user.status)}</span>\r\n        </div>\r\n        {user.followed ?\r\n            <button disabled={followingInProgress.some(id => id === user.id)}\r\n                    onClick={() => {\r\n                        unfollow(user.id)\r\n                    }\r\n\r\n                    }>Отписаться</button> :\r\n            <button disabled={followingInProgress.some(id => id === user.id)}\r\n                    className={s.mode_Green} onClick={() => {\r\n                follow(user.id)\r\n            }\r\n\r\n            }>Подписаться</button>\r\n        }\r\n    </div>\r\n}\r\n\r\nexport default User;","import React from \"react\";\r\nimport s from './Users.module.css';\r\nimport Paginator from \"../../common/Paginator\";\r\nimport User from \"./User\";\r\nimport {UserType} from \"../../types/types\";\r\n\r\ntype PropsType = {\r\n    totalUsersCount: number,\r\n    pageSize: number,\r\n    onPageChanged: (pageNumber: number) => void,\r\n    currentPage: number,\r\n    users: Array<UserType>\r\n    followingInProgress: Array<number>\r\n    follow: (userId:number) => void\r\n    unfollow: (userId:number) => void\r\n}\r\n\r\nconst Users: React.FC<PropsType> = (props) => {\r\n\r\n    return <div className={s.all}>\r\n\r\n        <Paginator totalUsersCount={props.totalUsersCount}\r\n                   currentPage={props.currentPage}\r\n                   pageSize={props.pageSize}\r\n                   onPageChanged={props.onPageChanged}\r\n            // portionSize={props.portionSize}\r\n\r\n        />\r\n        <div className={s.users}>\r\n            {\r\n\r\n                props.users.map(u => <User key={u.id}\r\n                                           user={u}\r\n                                           followingInProgress={props.followingInProgress}\r\n                                           follow={props.follow}\r\n                                           unfollow={props.unfollow}\r\n\r\n                />)\r\n\r\n            }\r\n        </div>\r\n        <Paginator totalUsersCount={props.totalUsersCount}\r\n                   currentPage={props.currentPage}\r\n                   pageSize={props.pageSize}\r\n                   onPageChanged={props.onPageChanged}\r\n            // portionSize={props.portionSize}\r\n\r\n        />\r\n\r\n    </div>\r\n}\r\n\r\nexport default Users;","import {createSelector} from \"reselect\";\r\nimport {AppStateType} from \"./redux-store\";\r\n\r\nexport const getUsersSelector = (state:AppStateType) => {\r\n    return state.usersPage.users\r\n}\r\n\r\n\r\nexport const getUsers  = createSelector(getUsersSelector, (users)=> {\r\n     return users.filter((u)=>true)\r\n})\r\n\r\nexport const getPageSize = (state:AppStateType) => {\r\n    return state.usersPage.pageSize\r\n}\r\n\r\nexport const getTotalUsersCount = (state:AppStateType) => {\r\n\r\n    return state.usersPage.totalUsersCount\r\n}\r\n\r\nexport const getCurrentPage = (state:AppStateType) => {\r\n    return state.usersPage.currentPage\r\n}\r\n\r\nexport const getIsFetching = (state:AppStateType) => {\r\n    return state.usersPage.isFetching\r\n}\r\nexport const getFollowingInProgress = (state:AppStateType ) => {\r\n    return state.usersPage.followingInProgress\r\n}\r\n// export const getPortionSize = (state) => {\r\n//     return state.usersPage.portionSize\r\n// }\r\n","import React from 'react'\r\nimport {\r\n    follow, requestUsers,\r\n    unfollow\r\n} from '../../redux/users-reducer';\r\nimport {connect} from 'react-redux';\r\nimport Users from './Users';\r\nimport Preloader from \"../../common/Preloader\";\r\nimport {compose} from \"redux\";\r\nimport {\r\n    getCurrentPage,\r\n    getFollowingInProgress,\r\n    getIsFetching,\r\n    getPageSize,\r\n    getTotalUsersCount,\r\n    getUsers,\r\n} from \"../../redux/users-selectors\";\r\nimport {WithAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {UserType} from \"../../types/types\";\r\nimport {AppStateType} from \"../../redux/redux-store\";\r\n\r\n\r\ntype MapStatePropsType = {\r\n    totalUsersCount: number,\r\n    pageSize: number,\r\n    currentPage: number,\r\n    users: Array<UserType>\r\n    followingInProgress: Array<number>\r\n    isFetching: boolean\r\n}\r\n\r\ntype MapDispatchPropsType = {\r\n    follow: (userId:number) => void\r\n    unfollow: (userId:number) => void\r\n    getUsers: (currentPage:number, pageSize:number) => void\r\n}\r\ntype OwnPropsType = {\r\n\r\n}\r\n\r\ntype PropsType =  MapStatePropsType & MapDispatchPropsType & OwnPropsType\r\n\r\nclass UsersContainer extends React.Component<PropsType> {\r\n    componentDidMount() {\r\n        const {currentPage, pageSize} = this.props;\r\n        this.props.getUsers(currentPage, pageSize);\r\n    }\r\n\r\n    onPageChanged = (pageNumber:number) => {\r\n        const {pageSize} = this.props\r\n        this.props.getUsers(pageNumber, pageSize);\r\n    }\r\n\r\n    render() {\r\n        return <>\r\n            {this.props.isFetching ? <Preloader/> : null}\r\n            <Users totalUsersCount={this.props.totalUsersCount}\r\n                   pageSize={this.props.pageSize}\r\n                   currentPage={this.props.currentPage}\r\n                   onPageChanged={this.onPageChanged}\r\n                   users={this.props.users}\r\n                   unfollow={this.props.unfollow}\r\n                   follow={this.props.follow}\r\n                   followingInProgress={this.props.followingInProgress}\r\n                // portionSize={this.props.portionSize}\r\n            />\r\n        </>\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state:AppStateType):MapStatePropsType => {\r\n\r\n    return {\r\n\r\n        users: getUsers(state),\r\n        pageSize: getPageSize(state),\r\n        totalUsersCount: getTotalUsersCount(state),\r\n        currentPage: getCurrentPage(state),\r\n        isFetching: getIsFetching(state),\r\n        followingInProgress: getFollowingInProgress(state),\r\n        // portionSize: getPortionSize(state)\r\n    }\r\n}\r\n\r\n\r\nexport default compose(\r\n    //<TStateProps = {}, TDispatchProps = {}, TOwnProps = {}, State = DefaultState>\r\n    connect<MapStatePropsType,MapDispatchPropsType,OwnPropsType,AppStateType>(mapStateToProps, {\r\n        follow,\r\n        unfollow,\r\n        getUsers: requestUsers,\r\n    })\r\n    , WithAuthRedirect\r\n)(UsersContainer)\r\n","import React, {useState} from \"react\"\r\nimport s from './Header.module.css'\r\nimport {NavLink} from \"react-router-dom\";\r\nimport defPhoto from \"../../assets/images/defaultProfileImage.png\";\r\n\r\nconst Header = ({profile, isAuth,login,logout}) => {\r\n    if (!profile) {\r\n        return  <header className={s.header}>\r\n\r\n            <div className={s.wrapper}>\r\n                <div className={s.helper_wrapper}>\r\n                    <div className={s.left}>\r\n                        {/*<h2 className={s.logo__txt}>  <span>FH</span> </h2>*/}\r\n                        <NavLink to=\"/profile\" className={s.logo__txt}\r\n                                 activeClassName={s.active}><span>FH</span></NavLink>\r\n                        <nav className={s.nav}>\r\n                            <NavLink to=\"/profile\" className={s.item} activeClassName={s.active}>Моё резюме</NavLink>\r\n                            {/*<NavLink to=\"/dialogs\" className={s.item} activeClassName={s.active}>Сообщения</NavLink>*/}\r\n                            <NavLink to=\"/users\" className={s.item} activeClassName={s.active}>Смотреть анкеты</NavLink>\r\n                        </nav>\r\n                    </div>\r\n\r\n\r\n                    <div className={s.login}>\r\n                             <span><NavLink className={s.loginButton} to={'/login'}>Войти</NavLink></span>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </header>\r\n    }\r\n\r\n    return (\r\n\r\n        <header className={s.header}>\r\n\r\n            <div className={s.wrapper}>\r\n                <div className={s.helper_wrapper}>\r\n                    <div className={s.left}>\r\n                        {/*<h2 className={s.logo__txt}>  <span>FH</span> </h2>*/}\r\n                        <NavLink to=\"/profile\" className={s.logo__txt}\r\n                                 activeClassName={s.active}><span>FH</span></NavLink>\r\n                        <nav className={s.nav}>\r\n                            <NavLink to=\"/profile\" className={s.item} activeClassName={s.active}>Моё резюме</NavLink>\r\n                            {/*<NavLink to=\"/dialogs\" className={s.item} activeClassName={s.active}>Сообщения</NavLink>*/}\r\n                            <NavLink to=\"/users\" className={s.item} activeClassName={s.active}>Смотреть анкеты</NavLink>\r\n                        </nav>\r\n                    </div>\r\n\r\n\r\n                    <div className={s.login}>\r\n                        {isAuth\r\n                            ? <div className={s.profile}>\r\n                                <div className={s.profileInfo}>\r\n                                    <div>{login}</div>\r\n                                    <img   src={profile.photos.small ? profile.photos.small : defPhoto}/>\r\n                                </div>\r\n                                <span className={s.linkWrap}><NavLink to=\"/profile\"\r\n                                                                      className={s.nickname}>Профиль</NavLink></span>\r\n                                <span className={s.loginButton+' ' + s.hiden} onClick={ logout}>Выйти</span>\r\n                              </div>\r\n                            : <span><NavLink className={s.loginButton} to={'/login'}>Войти</NavLink></span>}\r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </header>\r\n    )\r\n}\r\nexport default Header","import React from \"react\";\r\nimport Header from \"./Header\";\r\nimport {connect} from \"react-redux\";\r\nimport {logout,} from \"../../redux/auth-reducer\";\r\nimport {getHeaderProfile } from \"../../redux/profile-reducer\";\r\n\r\nclass HeaderContainer extends React.Component {\r\n    refreshProfile(){\r\n        const userId = this.props.authorizedUserId;\r\n        this.props.getHeaderProfile(userId)\r\n    }\r\n    componentDidMount() {\r\n        this.refreshProfile()\r\n    }\r\n\r\n    render() {\r\n\r\n        return <Header {...this.props}\r\n                       logout={this.props.logout}\r\n                       isAuth={this.props.isAuth}\r\n                       profile={this.props.profile}\r\n                       login={this.props.login}\r\n\r\n        />\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n    profile: state.profilePage.headerProfile,\r\n    isAuth: state.auth.isAuth,\r\n    login: state.auth.login,\r\n    authorizedUserId: state.auth.id\r\n})\r\n\r\n\r\n\r\n\r\n\r\nexport default connect(mapStateToProps, {getHeaderProfile, logout})(HeaderContainer)","import {checkAuth} from \"./auth-reducer\";\r\n\r\nconst INITIALIZED_SUCCESS = 'INITIALIZED_SUCCESS';\r\n\r\ntype InitialStateType = {\r\n    initialized:boolean\r\n}\r\nlet initialState:InitialStateType = {\r\n    initialized: false,\r\n};\r\n\r\nconst appReducer = (state = initialState, action:any):InitialStateType => {\r\n    switch (action.type) {\r\n        case INITIALIZED_SUCCESS:\r\n            return {\r\n                ...state, initialized: true,\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\ntype InitializedSuccess = {\r\n    type: typeof INITIALIZED_SUCCESS\r\n}\r\nexport const initializedSuccess = ():InitializedSuccess => ({\r\n    type: INITIALIZED_SUCCESS,\r\n});\r\n\r\nexport const initializeApp = () => (dispatch:any) => {\r\n    let promise = dispatch(checkAuth());\r\n    promise.then(()=>{\r\n        return dispatch(initializedSuccess());\r\n    })\r\n\r\n}\r\n\r\n\r\nexport default appReducer;","let initialState = {\r\n    friends: [\r\n        {id: 1, name: 'Erjan', img: 'https://memepedia.ru/wp-content/uploads/2019/03/erzhan-768x569.jpg'},\r\n        {\r\n            id: 3,\r\n            name: 'uRina',\r\n            img: 'https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcTirEEXAcgdftxMTICIHgtrNo9qBZhlLuUVlg&usqp=CAU'\r\n        },\r\n        {\r\n            id: 4,\r\n            name: 'Dushnila',\r\n            img: 'https://media.professionali.ru/processor/topics/size5/2017/03/21/brodude-ru-8-06-2015-f2ecjf7krnt7z.jpg'\r\n        },\r\n    ]}\r\n    type InitialStateType = typeof initialState\r\nconst sidebarReducer = (state = initialState, action:any):InitialStateType=>{\r\n    switch (action.type) {\r\n        default: return state;\r\n    }\r\n}\r\n\r\nexport default sidebarReducer;","import {applyMiddleware, combineReducers, compose, createStore} from \"redux\";\r\nimport profileReducer from \"./profile-reducer\";\r\nimport dialogsReducer from \"./dialogs-reducer\";\r\nimport sidebarReducer from \"./sidebar-reducer\";\r\nimport usersReducer from \"./users-reducer\";\r\nimport authReducer from \"./auth-reducer\";\r\nimport thunkMiddleware from \"redux-thunk\";\r\nimport {reducer as formReducer} from 'redux-form';\r\nimport appReducer from \"./app-reducer\";\r\n\r\nconst rootReducer = combineReducers({\r\n        app: appReducer,\r\n        profilePage: profileReducer,\r\n        dialogsPage: dialogsReducer,\r\n        sideBar: sidebarReducer,\r\n        usersPage: usersReducer,\r\n        auth: authReducer,\r\n        form: formReducer,\r\n    }\r\n)\r\n\r\ntype RootReducerType = typeof rootReducer;\r\nexport type AppStateType = ReturnType<RootReducerType>\r\n\r\n// @ts-ignore\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(rootReducer, /* preloadedState, */ composeEnhancers(\r\n    applyMiddleware(thunkMiddleware)\r\n));\r\n\r\n// @ts-ignore\r\nwindow.__store__ = store\r\n\r\nexport default store;","import React, {Suspense} from \"react\";\r\nimport Preloader from \"../common/Preloader\";\r\n\r\n\r\nexport const WithSuspense = (Component) => {\r\n    return (props) => {\r\n        return <Suspense fallback={<Preloader/>}>\r\n             <Component{...props}/>\r\n        </Suspense>\r\n    }\r\n}","import './App.css';\r\nimport React from 'react';\r\nimport Sidebar from './components/Sidebar/Sidebar';\r\nimport {BrowserRouter, HashRouter, Redirect, Route, Switch, withRouter} from \"react-router-dom\";\r\nimport UsersContainer from \"./components/Users/UsersContainer\";\r\nimport HeaderContainer from \"./components/Header/HeaderContainer\";\r\nimport {connect, Provider} from \"react-redux\";\r\nimport {compose} from \"redux\";\r\nimport {initializeApp} from \"./redux/app-reducer\";\r\nimport Preloader from \"./common/Preloader\";\r\nimport store from \"./redux/redux-store\";\r\nimport {WithSuspense} from \"./hoc/withSuspense\";\r\n\r\n\r\nconst DialogsContainer = React.lazy(() => import ( \"./components/Dialogs/DialogsContainer\"))\r\nconst ProfileContainer = React.lazy(() => import (\"./components/Profile/ProfileContainer\"))\r\nconst Login = React.lazy(() => import (\"./components/Login/Login\"))\r\n\r\n\r\nclass App extends React.Component {\r\n\r\n    componentDidMount() {\r\n        this.props.initializeApp()\r\n    }\r\n\r\n    render() {\r\n        if (!this.props.initialized) {\r\n            return <Preloader/>\r\n        } else {\r\n            return (<div>\r\n\r\n                    <HeaderContainer/>\r\n                    <div className=\"AppWrapper\">\r\n                        {/*<Sidebar store={this.props.store}/>*/}\r\n                        <div className='contentWrapper'>\r\n                            {\r\n                                //Withsuspense можно сделать без хока, см. доку реакта\r\n                            }\r\n                            <Switch>\r\n                                {/*swicth нужен, когда нам нужно перейсти по первому откликнувшемуся роуту*/}\r\n\r\n\r\n                                <Route path=\"/dialogs\" render={WithSuspense(DialogsContainer)}/>\r\n                                <Route path='/profile/:userId?' render={WithSuspense(ProfileContainer)}/>\r\n                                <Route path=\"/users\" render={() => <UsersContainer/>}/>\r\n                                <Route path=\"/login\" render={WithSuspense(Login)}/>\r\n                                <Route exact path='/' render={() => <Redirect to={\"/profile\"}/>}/>\r\n                                <Route path=\"*\" render={() => <div>404 NOT FOUND</div>}/>\r\n\r\n\r\n                            </Switch>\r\n\r\n                        </div>\r\n\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => ({\r\n    initialized: state.app.initialized,\r\n})\r\n\r\nconst AppContainer = compose(\r\n    connect(mapStateToProps, {initializeApp}),\r\n    withRouter,\r\n)(App);\r\n\r\nconst SamuraiJSApp = (props) => {\r\n    return <HashRouter >\r\n        <Provider store={store}>\r\n            <AppContainer/>\r\n        </Provider>\r\n    </HashRouter>\r\n}\r\n\r\nexport default SamuraiJSApp;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport SamuraiJSApp from \"./App\";\r\n\r\n//Samurai Way 1.0 passed!!))\r\n\r\n    ReactDOM.render(\r\n       <SamuraiJSApp/>, document.getElementById('root')\r\n    );","// extracted by mini-css-extract-plugin\nmodule.exports = {\"pages\":\"Paginator_pages__z57Ek\",\"pageNumber\":\"Paginator_pageNumber__pDztG\",\"paginatorIcon\":\"Paginator_paginatorIcon__3d0m-\",\"currentPage\":\"Paginator_currentPage__1IP3E\"};","import React from \"react\";\r\nimport s from \"./Preloader.module.css\"\r\n\r\nconst Preloader = () => {\r\n    // return <img src={preloader}/>\r\n    return <div className={s.loader}>\r\n        <div className={s.l_main}>\r\n            <div className={s.l_square}><span></span><span></span><span></span></div>\r\n            <div className={s.l_square}><span></span><span></span><span></span></div>\r\n            <div className={s.l_square}><span></span><span></span><span></span></div>\r\n            {/*<div className={s.l_square}><span></span><span></span><span></span></div>*/}\r\n        </div>\r\n    </div>\r\n}\r\nexport default Preloader","import {authAPI, securityAPI} from \"../ api/api\";\r\nimport {stopSubmit} from \"redux-form\";\r\n\r\nconst SET_USER_DATA = 'auth/SET_USER_DATA'\r\nconst GET_CAPTCHA_URL_SUCCESS = 'auth/GET_CAPTCHA_URL_SUCCESS'\r\n\r\n\r\n type InitialStateType = {\r\n    id: null | number,\r\n    email: null | string,\r\n    login: null | string,\r\n    isAuth: boolean,\r\n    captchaUrl: null | string,\r\n};\r\n\r\nlet initialState:InitialStateType = {\r\n    id: null,\r\n    email: null,\r\n    login: null,\r\n    isAuth: false,\r\n    captchaUrl: null,\r\n};\r\n\r\nconst authReducer = (state = initialState, action:any):InitialStateType => {\r\n    switch (action.type) {\r\n        case SET_USER_DATA:\r\n            return {\r\n                ...state, ...action.payload,\r\n            }\r\n        case GET_CAPTCHA_URL_SUCCESS:\r\n            return {\r\n                ...state, ...action.payload,\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\ntype SetAuthUserDataPayloadType ={\r\n    id: number|null\r\n    email:string|null\r\n    login: string|null\r\n    isAuth: boolean\r\n}\r\n\r\ntype SetAuthUserDataType ={\r\n    type:typeof SET_USER_DATA,\r\n    payload: SetAuthUserDataPayloadType\r\n}\r\n\r\nexport const setAuthUserData = (id:number | null, email:string | null, login:string | null, isAuth:boolean):SetAuthUserDataType => ({\r\n    type: SET_USER_DATA,\r\n    payload: {id, email, login, isAuth}\r\n});\r\n\r\ntype GetCaptchaUrlSuccessType = {\r\n    type: typeof GET_CAPTCHA_URL_SUCCESS\r\n    payload: {captchaUrl:string}\r\n}\r\n\r\nexport const getCaptchaUrlSuccess = (captchaUrl:string):GetCaptchaUrlSuccessType => ({\r\n    type: GET_CAPTCHA_URL_SUCCESS,\r\n    payload: {captchaUrl}\r\n});\r\n\r\nexport const checkAuth = () => async (dispatch:any) => {\r\n    let response = await authAPI.checkAuth()\r\n    if (response.data.resultCode === 0) {\r\n        let {id, email, login} = response.data.data\r\n        dispatch(setAuthUserData(id, email, login, true));\r\n    }\r\n}\r\n\r\nexport const login = (email:string, password:string, rememberMe:boolean, captcha: any  ) => async (dispatch:any) => {\r\n\r\n    let response = await authAPI.login({email, password, rememberMe,captcha})\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(checkAuth())\r\n    } else {\r\n        if (response.data.resultCode === 10) {\r\n            dispatch(getCaptchaUrl())\r\n        }\r\n        let errMessage = (response.data.messages === 0) ? 'Something wrong' : response.data.messages;\r\n        dispatch(stopSubmit('Login', {_error: errMessage}));\r\n\r\n\r\n    }\r\n}\r\n\r\nexport const getCaptchaUrl = () => async (dispatch:any) => {\r\n\r\n    const response = await securityAPI.getCaptchaUrl()\r\n\r\n    const captchaUrl = response.data.url\r\n\r\n    dispatch(getCaptchaUrlSuccess(captchaUrl))\r\n\r\n}\r\n\r\nexport const logout = () => async (dispatch:any) => {\r\n    let response = await authAPI.logout()\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(setAuthUserData(null, null, null, false));\r\n        dispatch(checkAuth())\r\n    }\r\n}\r\n\r\n\r\nexport default authReducer;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loader\":\"Preloader_loader__yyAyC\",\"l_main\":\"Preloader_l_main__1W_gA\",\"l_square\":\"Preloader_l_square__35SWx\",\"animsquare1\":\"Preloader_animsquare1__34OAR\",\"animsquare2\":\"Preloader_animsquare2__2IlfW\",\"animsquare3\":\"Preloader_animsquare3__3yh5T\",\"animsquare4\":\"Preloader_animsquare4__30sS9\"};","import {profileAPI, usersAPI} from \"../ api/api\";\r\nimport {stopSubmit} from \"redux-form\";\r\nimport {PhotosType, PostType, ProfileType} from \"../types/types\";\r\n\r\nconst ADD_POST = 'ADD-POST';\r\nconst DELETE_POST = 'DELETE_POST';\r\nconst SET_USER_PROFILE = 'SET_USER_PROFILE';\r\nconst SET_HEADER_PROFILE = 'SET_HEADER_PROFILE';\r\nconst SET_USER_STATUS = 'SET_USER_STATUS';\r\nconst SAVE_PHOTO_SUCCESS = 'SAVE_PHOTO_SUCCESS';\r\n\r\n\r\nlet initialState = {\r\n    posts: [\r\n        {id: 1, name: 'Joseph', message: 'smth clever text', likesCount: 16},\r\n        {id: 2, name: 'Isaac', message: 'smth clever text about life', likesCount: 39}\r\n    ] as Array<PostType>,\r\n    profile: null as ProfileType | null,\r\n    status: '',\r\n    headerProfile: null as ProfileType | null,\r\n};\r\nexport type InitialStateType = typeof initialState;\r\nconst profileReducer = (state = initialState, action: any): InitialStateType => {\r\n\r\n    switch (action.type) {\r\n        case ADD_POST: {\r\n            return {\r\n                ...state,\r\n                posts: [...state.posts, ({id: 5, name: 'smth', message: action.newPostText, likesCount: 0})],\r\n            }\r\n        }\r\n\r\n        case SET_USER_PROFILE: {\r\n            return {...state, profile: action.profile};\r\n        }\r\n        case SET_HEADER_PROFILE: {\r\n            return {...state, headerProfile: action.headerProfile};\r\n        }\r\n        case SET_USER_STATUS: {\r\n            return {...state, status: action.status};\r\n        }\r\n        case SAVE_PHOTO_SUCCESS: {\r\n            return {...state, profile: {...state.profile, photos: action.photos} as ProfileType};\r\n        }\r\n        case DELETE_POST: {\r\n            return {...state, posts: state.posts.filter((p) => p.id !== action.postId)}\r\n        }\r\n        default:\r\n            return state;\r\n\r\n    }\r\n}\r\n\r\n\r\ntype AddPostActionCreatorType = {\r\n    type: typeof ADD_POST,\r\n    newPostText: string\r\n}\r\nexport const addPostActionCreator = (newPostText: string): AddPostActionCreatorType => ({type: ADD_POST, newPostText});\r\ntype DeletePostType = {\r\n    type: typeof DELETE_POST,\r\n    postId: number\r\n}\r\nexport const deletePost = (postId: number): DeletePostType => ({type: DELETE_POST, postId});\r\ntype SetUserProfileType = {\r\n    type: typeof SET_USER_PROFILE,\r\n    profile: ProfileType\r\n}\r\nexport const setUserProfile = (profile: ProfileType): SetUserProfileType => ({type: SET_USER_PROFILE, profile});\r\ntype SetHeaderProfileType = {\r\n    type: typeof SET_HEADER_PROFILE,\r\n    headerProfile: ProfileType\r\n}\r\nexport const setHeaderProfile = (headerProfile: ProfileType): SetHeaderProfileType => ({type: SET_HEADER_PROFILE, headerProfile});\r\ntype SetUserStatusACType = {\r\n    type: typeof SET_USER_STATUS,\r\n    status: string\r\n}\r\nexport const setUserStatusAC = (status: string): SetUserStatusACType => ({type: SET_USER_STATUS, status});\r\ntype SavePhotoSuccesType = {\r\n    type: typeof SAVE_PHOTO_SUCCESS,\r\n    photos: PhotosType\r\n}\r\nexport const savePhotoSucces = (photos: PhotosType): SavePhotoSuccesType => ({type: SAVE_PHOTO_SUCCESS, photos});\r\n\r\nexport const getProfile = (userId: number) => async (dispatch: any) => {\r\n\r\n    let response = await usersAPI.getProfile(userId);\r\n    dispatch(setUserProfile(response.data));\r\n}\r\n\r\nexport const getHeaderProfile = (userId: number) => async (dispatch: any) => {\r\n\r\n    let response = await usersAPI.getProfile(userId);\r\n    dispatch(setHeaderProfile(response.data));\r\n}\r\n\r\n\r\nexport const getUserStatus = (userId: number) => async (dispatch: any) => {\r\n    let response = await profileAPI.getStatus(userId)\r\n    dispatch(setUserStatusAC(response.data));\r\n}\r\nexport const updateUserStatus = (status: string) => async (dispatch: any) => {\r\n    let response = await profileAPI.updateStatus(status)\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(setUserStatusAC(status));\r\n    }\r\n}\r\nexport const savePhoto = (file: any) => async (dispatch: any) => {\r\n    let response = await profileAPI.savePhoto(file)\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(savePhotoSucces(response.data.data.photos));\r\n    }\r\n}\r\n\r\nexport const saveProfile = (profile: ProfileType) => async (dispatch: any, getState: any) => {\r\n    const userId = getState().auth.id\r\n    const response = await profileAPI.saveProfile(profile)\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(getProfile(userId));\r\n    } else {\r\n        dispatch(stopSubmit('editProfile', {_error: response.data.messages[0]}))\r\n        return Promise.reject(response.data.messages[0])\r\n    }\r\n}\r\n\r\nexport default profileReducer","// extracted by mini-css-extract-plugin\nmodule.exports = {\"hiden\":\"Header_hiden__1DbpB\",\"header\":\"Header_header__3M_6_\",\"helper_wrapper\":\"Header_helper_wrapper__1Idem\",\"wrapper\":\"Header_wrapper__RFteg\",\"left\":\"Header_left__alylq\",\"logo__txt\":\"Header_logo__txt__2Ek4q\",\"nav\":\"Header_nav__1CLiu\",\"item\":\"Header_item__KPjeY\",\"active\":\"Header_active__38DMm\",\"login\":\"Header_login__2A3QA\",\"linkWrap\":\"Header_linkWrap__2Qxhk\",\"profile\":\"Header_profile__1Y6n0\",\"loginButton\":\"Header_loginButton__12XQx\",\"nickname\":\"Header_nickname__3kjp9\",\"profileInfo\":\"Header_profileInfo__1673x\"};","import React from \"react\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n});\r\n\r\nexport const WithAuthRedirect = (Component) => {\r\n\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.isAuth) {\r\n                return <Redirect to={\"/login\"}/>\r\n            }\r\n            return <Component {...this.props}/>\r\n        }\r\n    }\r\n\r\n    let ConnectedRedirectComponent = connect(mapStateToPropsForRedirect,{})(RedirectComponent)\r\n    return ConnectedRedirectComponent;\r\n}","export default __webpack_public_path__ + \"static/media/defaultProfileImage.4409fc97.png\";","const ADD_MESSAGE = 'dialogs/ADD-MESSAGE';\r\n\r\n\r\nexport type DialogItemType = {\r\n    id: number\r\n    name: string\r\n    img: string | null\r\n}\r\nexport type MessageItemType = {\r\n    id: number\r\n    name: string\r\n    img: string | null\r\n    message: string\r\n}\r\n\r\n\r\nexport type InitialStateType  = typeof initialState;\r\n\r\nlet initialState = {\r\n    dialogs: [\r\n        {\r\n            id: 1,\r\n            name: 'Yury',\r\n            img: 'https://memepedia.ru/wp-content/uploads/2019/03/erzhan-768x569.jpg'\r\n        },\r\n        {\r\n            id: 2,\r\n            name: 'another girl',\r\n            img: 'https://ru-minecraft.ru/uploads/posts/2018-02/1519154980_mad-villagers.png'\r\n        },\r\n        {\r\n            id: 3,\r\n            name: 'Rina',\r\n            img: 'https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcTirEEXAcgdftxMTICIHgtrNo9qBZhlLuUVlg&usqp=CAU'\r\n        },\r\n        {\r\n            id: 4,\r\n            name: 'Dan',\r\n            img: 'https://media.professionali.ru/processor/topics/size5/2017/03/21/brodude-ru-8-06-2015-f2ecjf7krnt7z.jpg'\r\n        },\r\n    ],\r\n    messages: [\r\n        {\r\n            id: 1,\r\n            name: 'another girl',\r\n            img: 'https://ru-minecraft.ru/uploads/posts/2018-02/1519154980_mad-villagers.png',\r\n            message: 'hello'\r\n        },\r\n        {\r\n            id: 2,\r\n            name: 'me',\r\n            img: 'https://pbs.twimg.com/profile_images/1412450786542379011/IY6aPa50.png',\r\n            message: 'Hy'\r\n        },\r\n        {\r\n            id: 3,\r\n            name: 'another girl',\r\n            img: 'https://ru-minecraft.ru/uploads/posts/2018-02/1519154980_mad-villagers.png',\r\n            message: '  what are you doing '\r\n        },\r\n        {\r\n            id: 4,\r\n            name: 'me',\r\n            img: 'https://pbs.twimg.com/profile_images/1412450786542379011/IY6aPa50.png',\r\n            message: 'i am programming now'\r\n        }\r\n    ],\r\n};\r\n\r\nconst dialogsReducer = (state = initialState, action: any):InitialStateType  => {\r\n    switch (action.type) {\r\n        case ADD_MESSAGE:\r\n            return {\r\n                ...state,\r\n                messages: [...state.messages, {\r\n                    id: 5,\r\n                    name: 'me',\r\n                    img: 'https://pbs.twimg.com/profile_images/1412450786542379011/IY6aPa50.png',\r\n                    message: action.newMessageBody\r\n                }],\r\n            };\r\n\r\n        default:\r\n            return state;\r\n\r\n    }\r\n}\r\ntype addMessageActionCreatorType = {\r\n    type: typeof ADD_MESSAGE,\r\n    newMessageBody: string\r\n}\r\nexport const addMessageActionCreator = (newMessageBody:string):addMessageActionCreatorType => ({type: ADD_MESSAGE, newMessageBody});\r\n\r\n\r\nexport default dialogsReducer;"],"sourceRoot":""}